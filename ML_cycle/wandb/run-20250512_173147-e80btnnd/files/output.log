<class 'pandas.core.frame.DataFrame'>
RangeIndex: 1000 entries, 0 to 999
Data columns (total 11 columns):
 #   Column             Non-Null Count  Dtype
---  ------             --------------  -----
 0   Timestamp          1000 non-null   object
 1   Temperature        1000 non-null   float64
 2   Humidity           1000 non-null   float64
 3   SquareFootage      1000 non-null   float64
 4   Occupancy          1000 non-null   int64
 5   HVACUsage          1000 non-null   object
 6   LightingUsage      1000 non-null   object
 7   RenewableEnergy    1000 non-null   float64
 8   DayOfWeek          1000 non-null   object
 9   Holiday            1000 non-null   object
 10  EnergyConsumption  1000 non-null   float64
dtypes: float64(5), int64(1), object(5)
memory usage: 86.1+ KB
ADF Statistic: -31.576934
p-value: 0.000000
[{"name": "ACF", "type": "Figure", "fullType": "matplotlib.figure.Figure"}, {"name": "PACF", "type": "Figure", "fullType": "matplotlib.figure.Figure"}, {"name": "Prophet", "type": "type", "fullType": "type"}, {"name": "adfuller", "type": "function", "fullType": "function"}, {"name": "artifact", "type": "Artifact", "fullType": "wandb.sdk.artifacts.artifact.Artifact"}, {"name": "ax", "type": "Axes", "fullType": "matplotlib.axes._axes.Axes"}, {"name": "ax1", "type": "Axes", "fullType": "matplotlib.axes._axes.Axes"}, {"name": "ax2", "type": "Axes", "fullType": "matplotlib.axes._axes.Axes"}, {"name": "axes", "type": "ndarray", "fullType": "numpy.ndarray"}, {"name": "correlation_od_variable", "type": "Axes", "fullType": "matplotlib.axes._axes.Axes"}, {"name": "cross_validation", "type": "function", "fullType": "function"}, {"name": "data_artifact", "type": "Artifact", "fullType": "wandb.sdk.artifacts.artifact.Artifact"}, {"name": "data_description", "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}, {"name": "decomposition", "type": "DecomposeResult", "fullType": "statsmodels.tsa.seasonal.DecomposeResult"}, {"name": "decomposition_dialy", "type": "DecomposeResult", "fullType": "statsmodels.tsa.seasonal.DecomposeResult"}, {"name": "df", "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}, {"name": "df1", "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}, {"name": "df2", "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}, {"name": "energy_consumption_display", "type": "Axes", "fullType": "matplotlib.axes._axes.Axes"}, {"name": "fig", "type": "Figure", "fullType": "matplotlib.figure.Figure"}, {"name": "mean_absolute_error", "type": "function", "fullType": "function"}, {"name": "mean_absolute_percentage_error", "type": "function", "fullType": "function"}, {"name": "mean_squared_error", "type": "function", "fullType": "function"}, {"name": "np", "type": "module", "fullType": "module"}, {"name": "pd", "type": "module", "fullType": "module"}, {"name": "performance_metrics", "type": "function", "fullType": "function"}, {"name": "plot_acf", "type": "function", "fullType": "function"}, {"name": "plot_components_plotly", "type": "function", "fullType": "function"}, {"name": "plot_pacf", "type": "function", "fullType": "function"}, {"name": "plot_path", "type": "str", "fullType": "str"}, {"name": "plot_plotly", "type": "function", "fullType": "function"}, {"name": "plt", "type": "module", "fullType": "module"}, {"name": "result", "type": "tuple", "fullType": "tuple"}, {"name": "root_mean_squared_error", "type": "function", "fullType": "function"}, {"name": "seasonal_decompose", "type": "function", "fullType": "function"}, {"name": "sns", "type": "module", "fullType": "module"}, {"name": "wandb", "type": "module", "fullType": "module"}, {"name": "weekly_consumption", "type": "Axes", "fullType": "matplotlib.axes._axes.Axes"}]
{"shape": "(6,)", "count": 6, "type": "ndarray", "fullType": "numpy.ndarray"}
{"shape": "(8, 6)", "count": 8, "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}
{"shape": "(42, 1)", "count": 42, "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}
{"shape": "(42, 6)", "count": 42, "type": "DataFrame", "fullType": "pandas.core.frame.DataFrame"}
